// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PointsAnnotation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foxglove {

  /// <summary>Holder for reflection information generated from PointsAnnotation.proto</summary>
  public static partial class PointsAnnotationReflection {

    #region Descriptor
    /// <summary>File descriptor for PointsAnnotation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PointsAnnotationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQb2ludHNBbm5vdGF0aW9uLnByb3RvEghmb3hnbG92ZRoLQ29sb3IucHJv",
            "dG8aDFBvaW50Mi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90byLqAgoQUG9pbnRzQW5ub3RhdGlvbhItCgl0aW1lc3RhbXAYASABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi0KBHR5cGUYAiABKA4yHy5m",
            "b3hnbG92ZS5Qb2ludHNBbm5vdGF0aW9uLlR5cGUSIAoGcG9pbnRzGAMgAygL",
            "MhAuZm94Z2xvdmUuUG9pbnQyEiYKDW91dGxpbmVfY29sb3IYBCABKAsyDy5m",
            "b3hnbG92ZS5Db2xvchInCg5vdXRsaW5lX2NvbG9ycxgFIAMoCzIPLmZveGds",
            "b3ZlLkNvbG9yEiMKCmZpbGxfY29sb3IYBiABKAsyDy5mb3hnbG92ZS5Db2xv",
            "chIRCgl0aGlja25lc3MYByABKAEiTQoEVHlwZRILCgdVTktOT1dOEAASCgoG",
            "UE9JTlRTEAESDQoJTElORV9MT09QEAISDgoKTElORV9TVFJJUBADEg0KCUxJ",
            "TkVfTElTVBAEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Foxglove.ColorReflection.Descriptor, global::Foxglove.Point2Reflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foxglove.PointsAnnotation), global::Foxglove.PointsAnnotation.Parser, new[]{ "Timestamp", "Type", "Points", "OutlineColor", "OutlineColors", "FillColor", "Thickness" }, null, new[]{ typeof(global::Foxglove.PointsAnnotation.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An array of points on a 2D image
  /// </summary>
  public sealed partial class PointsAnnotation : pb::IMessage<PointsAnnotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PointsAnnotation> _parser = new pb::MessageParser<PointsAnnotation>(() => new PointsAnnotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PointsAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foxglove.PointsAnnotationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsAnnotation(PointsAnnotation other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      type_ = other.type_;
      points_ = other.points_.Clone();
      outlineColor_ = other.outlineColor_ != null ? other.outlineColor_.Clone() : null;
      outlineColors_ = other.outlineColors_.Clone();
      fillColor_ = other.fillColor_ != null ? other.fillColor_.Clone() : null;
      thickness_ = other.thickness_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PointsAnnotation Clone() {
      return new PointsAnnotation(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp of annotation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Foxglove.PointsAnnotation.Types.Type type_ = global::Foxglove.PointsAnnotation.Types.Type.Unknown;
    /// <summary>
    /// Type of points annotation to draw
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.PointsAnnotation.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Foxglove.Point2> _repeated_points_codec
        = pb::FieldCodec.ForMessage(26, global::Foxglove.Point2.Parser);
    private readonly pbc::RepeatedField<global::Foxglove.Point2> points_ = new pbc::RepeatedField<global::Foxglove.Point2>();
    /// <summary>
    /// Points in 2D image coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Foxglove.Point2> Points {
      get { return points_; }
    }

    /// <summary>Field number for the "outline_color" field.</summary>
    public const int OutlineColorFieldNumber = 4;
    private global::Foxglove.Color outlineColor_;
    /// <summary>
    /// Outline color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Color OutlineColor {
      get { return outlineColor_; }
      set {
        outlineColor_ = value;
      }
    }

    /// <summary>Field number for the "outline_colors" field.</summary>
    public const int OutlineColorsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Foxglove.Color> _repeated_outlineColors_codec
        = pb::FieldCodec.ForMessage(42, global::Foxglove.Color.Parser);
    private readonly pbc::RepeatedField<global::Foxglove.Color> outlineColors_ = new pbc::RepeatedField<global::Foxglove.Color>();
    /// <summary>
    /// Per-point colors, if `type` is `POINTS`, or per-segment stroke colors, if `type` is `LINE_LIST`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Foxglove.Color> OutlineColors {
      get { return outlineColors_; }
    }

    /// <summary>Field number for the "fill_color" field.</summary>
    public const int FillColorFieldNumber = 6;
    private global::Foxglove.Color fillColor_;
    /// <summary>
    /// Fill color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Color FillColor {
      get { return fillColor_; }
      set {
        fillColor_ = value;
      }
    }

    /// <summary>Field number for the "thickness" field.</summary>
    public const int ThicknessFieldNumber = 7;
    private double thickness_;
    /// <summary>
    /// Stroke thickness
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Thickness {
      get { return thickness_; }
      set {
        thickness_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PointsAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PointsAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (Type != other.Type) return false;
      if(!points_.Equals(other.points_)) return false;
      if (!object.Equals(OutlineColor, other.OutlineColor)) return false;
      if(!outlineColors_.Equals(other.outlineColors_)) return false;
      if (!object.Equals(FillColor, other.FillColor)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Thickness, other.Thickness)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (Type != global::Foxglove.PointsAnnotation.Types.Type.Unknown) hash ^= Type.GetHashCode();
      hash ^= points_.GetHashCode();
      if (outlineColor_ != null) hash ^= OutlineColor.GetHashCode();
      hash ^= outlineColors_.GetHashCode();
      if (fillColor_ != null) hash ^= FillColor.GetHashCode();
      if (Thickness != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Thickness);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (Type != global::Foxglove.PointsAnnotation.Types.Type.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      points_.WriteTo(output, _repeated_points_codec);
      if (outlineColor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutlineColor);
      }
      outlineColors_.WriteTo(output, _repeated_outlineColors_codec);
      if (fillColor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(FillColor);
      }
      if (Thickness != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Thickness);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (Type != global::Foxglove.PointsAnnotation.Types.Type.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      points_.WriteTo(ref output, _repeated_points_codec);
      if (outlineColor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutlineColor);
      }
      outlineColors_.WriteTo(ref output, _repeated_outlineColors_codec);
      if (fillColor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(FillColor);
      }
      if (Thickness != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Thickness);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (Type != global::Foxglove.PointsAnnotation.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += points_.CalculateSize(_repeated_points_codec);
      if (outlineColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutlineColor);
      }
      size += outlineColors_.CalculateSize(_repeated_outlineColors_codec);
      if (fillColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FillColor);
      }
      if (Thickness != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PointsAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.Type != global::Foxglove.PointsAnnotation.Types.Type.Unknown) {
        Type = other.Type;
      }
      points_.Add(other.points_);
      if (other.outlineColor_ != null) {
        if (outlineColor_ == null) {
          OutlineColor = new global::Foxglove.Color();
        }
        OutlineColor.MergeFrom(other.OutlineColor);
      }
      outlineColors_.Add(other.outlineColors_);
      if (other.fillColor_ != null) {
        if (fillColor_ == null) {
          FillColor = new global::Foxglove.Color();
        }
        FillColor.MergeFrom(other.FillColor);
      }
      if (other.Thickness != 0D) {
        Thickness = other.Thickness;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 16: {
            Type = (global::Foxglove.PointsAnnotation.Types.Type) input.ReadEnum();
            break;
          }
          case 26: {
            points_.AddEntriesFrom(input, _repeated_points_codec);
            break;
          }
          case 34: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Foxglove.Color();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 42: {
            outlineColors_.AddEntriesFrom(input, _repeated_outlineColors_codec);
            break;
          }
          case 50: {
            if (fillColor_ == null) {
              FillColor = new global::Foxglove.Color();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 57: {
            Thickness = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 16: {
            Type = (global::Foxglove.PointsAnnotation.Types.Type) input.ReadEnum();
            break;
          }
          case 26: {
            points_.AddEntriesFrom(ref input, _repeated_points_codec);
            break;
          }
          case 34: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Foxglove.Color();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
          case 42: {
            outlineColors_.AddEntriesFrom(ref input, _repeated_outlineColors_codec);
            break;
          }
          case 50: {
            if (fillColor_ == null) {
              FillColor = new global::Foxglove.Color();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 57: {
            Thickness = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PointsAnnotation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Type of points annotation
      /// </summary>
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("POINTS")] Points = 1,
        [pbr::OriginalName("LINE_LOOP")] LineLoop = 2,
        [pbr::OriginalName("LINE_STRIP")] LineStrip = 3,
        [pbr::OriginalName("LINE_LIST")] LineList = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
