// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TextPrimitive.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foxglove {

  /// <summary>Holder for reflection information generated from TextPrimitive.proto</summary>
  public static partial class TextPrimitiveReflection {

    #region Descriptor
    /// <summary>File descriptor for TextPrimitive.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TextPrimitiveReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNUZXh0UHJpbWl0aXZlLnByb3RvEghmb3hnbG92ZRoLQ29sb3IucHJvdG8a",
            "ClBvc2UucHJvdG8imgEKDVRleHRQcmltaXRpdmUSHAoEcG9zZRgBIAEoCzIO",
            "LmZveGdsb3ZlLlBvc2USEQoJYmlsbGJvYXJkGAIgASgIEhEKCWZvbnRfc2l6",
            "ZRgDIAEoARIXCg9zY2FsZV9pbnZhcmlhbnQYBCABKAgSHgoFY29sb3IYBSAB",
            "KAsyDy5mb3hnbG92ZS5Db2xvchIMCgR0ZXh0GAYgASgJYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Foxglove.ColorReflection.Descriptor, global::Foxglove.PoseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foxglove.TextPrimitive), global::Foxglove.TextPrimitive.Parser, new[]{ "Pose", "Billboard", "FontSize", "ScaleInvariant", "Color", "Text" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A primitive representing a text label
  /// </summary>
  public sealed partial class TextPrimitive : pb::IMessage<TextPrimitive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextPrimitive> _parser = new pb::MessageParser<TextPrimitive>(() => new TextPrimitive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextPrimitive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foxglove.TextPrimitiveReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextPrimitive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextPrimitive(TextPrimitive other) : this() {
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      billboard_ = other.billboard_;
      fontSize_ = other.fontSize_;
      scaleInvariant_ = other.scaleInvariant_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextPrimitive Clone() {
      return new TextPrimitive(this);
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 1;
    private global::Foxglove.Pose pose_;
    /// <summary>
    /// Position of the center of the text box and orientation of the text. Identity orientation means the text is oriented in the xy-plane and flows from -x to +x.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Pose Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    /// <summary>Field number for the "billboard" field.</summary>
    public const int BillboardFieldNumber = 2;
    private bool billboard_;
    /// <summary>
    /// Whether the text should respect `pose.orientation` (false) or always face the camera (true)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Billboard {
      get { return billboard_; }
      set {
        billboard_ = value;
      }
    }

    /// <summary>Field number for the "font_size" field.</summary>
    public const int FontSizeFieldNumber = 3;
    private double fontSize_;
    /// <summary>
    /// Font size (height of one line of text)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double FontSize {
      get { return fontSize_; }
      set {
        fontSize_ = value;
      }
    }

    /// <summary>Field number for the "scale_invariant" field.</summary>
    public const int ScaleInvariantFieldNumber = 4;
    private bool scaleInvariant_;
    /// <summary>
    /// Indicates whether `font_size` is a fixed size in screen pixels (true), or specified in world coordinates and scales with distance from the camera (false)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ScaleInvariant {
      get { return scaleInvariant_; }
      set {
        scaleInvariant_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 5;
    private global::Foxglove.Color color_;
    /// <summary>
    /// Color of the text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 6;
    private string text_ = "";
    /// <summary>
    /// Text
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextPrimitive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextPrimitive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pose, other.Pose)) return false;
      if (Billboard != other.Billboard) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FontSize, other.FontSize)) return false;
      if (ScaleInvariant != other.ScaleInvariant) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (Billboard != false) hash ^= Billboard.GetHashCode();
      if (FontSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FontSize);
      if (ScaleInvariant != false) hash ^= ScaleInvariant.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pose_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pose);
      }
      if (Billboard != false) {
        output.WriteRawTag(16);
        output.WriteBool(Billboard);
      }
      if (FontSize != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(FontSize);
      }
      if (ScaleInvariant != false) {
        output.WriteRawTag(32);
        output.WriteBool(ScaleInvariant);
      }
      if (color_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Color);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pose_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pose);
      }
      if (Billboard != false) {
        output.WriteRawTag(16);
        output.WriteBool(Billboard);
      }
      if (FontSize != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(FontSize);
      }
      if (ScaleInvariant != false) {
        output.WriteRawTag(32);
        output.WriteBool(ScaleInvariant);
      }
      if (color_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Color);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (Billboard != false) {
        size += 1 + 1;
      }
      if (FontSize != 0D) {
        size += 1 + 8;
      }
      if (ScaleInvariant != false) {
        size += 1 + 1;
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextPrimitive other) {
      if (other == null) {
        return;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Foxglove.Pose();
        }
        Pose.MergeFrom(other.Pose);
      }
      if (other.Billboard != false) {
        Billboard = other.Billboard;
      }
      if (other.FontSize != 0D) {
        FontSize = other.FontSize;
      }
      if (other.ScaleInvariant != false) {
        ScaleInvariant = other.ScaleInvariant;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Foxglove.Color();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pose_ == null) {
              Pose = new global::Foxglove.Pose();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 16: {
            Billboard = input.ReadBool();
            break;
          }
          case 25: {
            FontSize = input.ReadDouble();
            break;
          }
          case 32: {
            ScaleInvariant = input.ReadBool();
            break;
          }
          case 42: {
            if (color_ == null) {
              Color = new global::Foxglove.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 50: {
            Text = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pose_ == null) {
              Pose = new global::Foxglove.Pose();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 16: {
            Billboard = input.ReadBool();
            break;
          }
          case 25: {
            FontSize = input.ReadDouble();
            break;
          }
          case 32: {
            ScaleInvariant = input.ReadBool();
            break;
          }
          case 42: {
            if (color_ == null) {
              Color = new global::Foxglove.Color();
            }
            input.ReadMessage(Color);
            break;
          }
          case 50: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
