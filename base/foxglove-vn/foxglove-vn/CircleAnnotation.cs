// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CircleAnnotation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foxglove {

  /// <summary>Holder for reflection information generated from CircleAnnotation.proto</summary>
  public static partial class CircleAnnotationReflection {

    #region Descriptor
    /// <summary>File descriptor for CircleAnnotation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CircleAnnotationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZDaXJjbGVBbm5vdGF0aW9uLnByb3RvEghmb3hnbG92ZRoLQ29sb3IucHJv",
            "dG8aDFBvaW50Mi5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90byLXAQoQQ2lyY2xlQW5ub3RhdGlvbhItCgl0aW1lc3RhbXAYASABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiIKCHBvc2l0aW9uGAIgASgL",
            "MhAuZm94Z2xvdmUuUG9pbnQyEhAKCGRpYW1ldGVyGAMgASgBEhEKCXRoaWNr",
            "bmVzcxgEIAEoARIjCgpmaWxsX2NvbG9yGAUgASgLMg8uZm94Z2xvdmUuQ29s",
            "b3ISJgoNb3V0bGluZV9jb2xvchgGIAEoCzIPLmZveGdsb3ZlLkNvbG9yYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Foxglove.ColorReflection.Descriptor, global::Foxglove.Point2Reflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foxglove.CircleAnnotation), global::Foxglove.CircleAnnotation.Parser, new[]{ "Timestamp", "Position", "Diameter", "Thickness", "FillColor", "OutlineColor" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A circle annotation on a 2D image
  /// </summary>
  public sealed partial class CircleAnnotation : pb::IMessage<CircleAnnotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CircleAnnotation> _parser = new pb::MessageParser<CircleAnnotation>(() => new CircleAnnotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CircleAnnotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foxglove.CircleAnnotationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircleAnnotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircleAnnotation(CircleAnnotation other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      diameter_ = other.diameter_;
      thickness_ = other.thickness_;
      fillColor_ = other.fillColor_ != null ? other.fillColor_.Clone() : null;
      outlineColor_ = other.outlineColor_ != null ? other.outlineColor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CircleAnnotation Clone() {
      return new CircleAnnotation(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp of circle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::Foxglove.Point2 position_;
    /// <summary>
    /// Center of the circle in 2D image coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Point2 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "diameter" field.</summary>
    public const int DiameterFieldNumber = 3;
    private double diameter_;
    /// <summary>
    /// Circle diameter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Diameter {
      get { return diameter_; }
      set {
        diameter_ = value;
      }
    }

    /// <summary>Field number for the "thickness" field.</summary>
    public const int ThicknessFieldNumber = 4;
    private double thickness_;
    /// <summary>
    /// Line thickness
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Thickness {
      get { return thickness_; }
      set {
        thickness_ = value;
      }
    }

    /// <summary>Field number for the "fill_color" field.</summary>
    public const int FillColorFieldNumber = 5;
    private global::Foxglove.Color fillColor_;
    /// <summary>
    /// Fill color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Color FillColor {
      get { return fillColor_; }
      set {
        fillColor_ = value;
      }
    }

    /// <summary>Field number for the "outline_color" field.</summary>
    public const int OutlineColorFieldNumber = 6;
    private global::Foxglove.Color outlineColor_;
    /// <summary>
    /// Outline color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Color OutlineColor {
      get { return outlineColor_; }
      set {
        outlineColor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CircleAnnotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CircleAnnotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Diameter, other.Diameter)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Thickness, other.Thickness)) return false;
      if (!object.Equals(FillColor, other.FillColor)) return false;
      if (!object.Equals(OutlineColor, other.OutlineColor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (Diameter != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Diameter);
      if (Thickness != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Thickness);
      if (fillColor_ != null) hash ^= FillColor.GetHashCode();
      if (outlineColor_ != null) hash ^= OutlineColor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (Diameter != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Diameter);
      }
      if (Thickness != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Thickness);
      }
      if (fillColor_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FillColor);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OutlineColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (Diameter != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Diameter);
      }
      if (Thickness != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Thickness);
      }
      if (fillColor_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FillColor);
      }
      if (outlineColor_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OutlineColor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (Diameter != 0D) {
        size += 1 + 8;
      }
      if (Thickness != 0D) {
        size += 1 + 8;
      }
      if (fillColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FillColor);
      }
      if (outlineColor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutlineColor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CircleAnnotation other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Foxglove.Point2();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.Diameter != 0D) {
        Diameter = other.Diameter;
      }
      if (other.Thickness != 0D) {
        Thickness = other.Thickness;
      }
      if (other.fillColor_ != null) {
        if (fillColor_ == null) {
          FillColor = new global::Foxglove.Color();
        }
        FillColor.MergeFrom(other.FillColor);
      }
      if (other.outlineColor_ != null) {
        if (outlineColor_ == null) {
          OutlineColor = new global::Foxglove.Color();
        }
        OutlineColor.MergeFrom(other.OutlineColor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Foxglove.Point2();
            }
            input.ReadMessage(Position);
            break;
          }
          case 25: {
            Diameter = input.ReadDouble();
            break;
          }
          case 33: {
            Thickness = input.ReadDouble();
            break;
          }
          case 42: {
            if (fillColor_ == null) {
              FillColor = new global::Foxglove.Color();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 50: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Foxglove.Color();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::Foxglove.Point2();
            }
            input.ReadMessage(Position);
            break;
          }
          case 25: {
            Diameter = input.ReadDouble();
            break;
          }
          case 33: {
            Thickness = input.ReadDouble();
            break;
          }
          case 42: {
            if (fillColor_ == null) {
              FillColor = new global::Foxglove.Color();
            }
            input.ReadMessage(FillColor);
            break;
          }
          case 50: {
            if (outlineColor_ == null) {
              OutlineColor = new global::Foxglove.Color();
            }
            input.ReadMessage(OutlineColor);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
