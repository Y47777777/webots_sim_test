// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LaserScan.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foxglove {

  /// <summary>Holder for reflection information generated from LaserScan.proto</summary>
  public static partial class LaserScanReflection {

    #region Descriptor
    /// <summary>File descriptor for LaserScan.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LaserScanReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9MYXNlclNjYW4ucHJvdG8SCGZveGdsb3ZlGgpQb3NlLnByb3RvGh9nb29n",
            "bGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIrcBCglMYXNlclNjYW4SLQoJ",
            "dGltZXN0YW1wGAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQ",
            "CghmcmFtZV9pZBgCIAEoCRIcCgRwb3NlGAMgASgLMg4uZm94Z2xvdmUuUG9z",
            "ZRITCgtzdGFydF9hbmdsZRgEIAEoARIRCgllbmRfYW5nbGUYBSABKAESDgoG",
            "cmFuZ2VzGAYgAygBEhMKC2ludGVuc2l0aWVzGAcgAygBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Foxglove.PoseReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foxglove.LaserScan), global::Foxglove.LaserScan.Parser, new[]{ "Timestamp", "FrameId", "Pose", "StartAngle", "EndAngle", "Ranges", "Intensities" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A single scan from a planar laser range-finder
  /// </summary>
  public sealed partial class LaserScan : pb::IMessage<LaserScan>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LaserScan> _parser = new pb::MessageParser<LaserScan>(() => new LaserScan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LaserScan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foxglove.LaserScanReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaserScan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaserScan(LaserScan other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      frameId_ = other.frameId_;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      startAngle_ = other.startAngle_;
      endAngle_ = other.endAngle_;
      ranges_ = other.ranges_.Clone();
      intensities_ = other.intensities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaserScan Clone() {
      return new LaserScan(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp of scan
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 2;
    private string frameId_ = "";
    /// <summary>
    /// Frame of reference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 3;
    private global::Foxglove.Pose pose_;
    /// <summary>
    /// Origin of scan relative to frame of reference; points are positioned in the x-y plane relative to this origin; angles are interpreted as counterclockwise rotations around the z axis with 0 rad being in the +x direction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Pose Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    /// <summary>Field number for the "start_angle" field.</summary>
    public const int StartAngleFieldNumber = 4;
    private double startAngle_;
    /// <summary>
    /// Bearing of first point, in radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double StartAngle {
      get { return startAngle_; }
      set {
        startAngle_ = value;
      }
    }

    /// <summary>Field number for the "end_angle" field.</summary>
    public const int EndAngleFieldNumber = 5;
    private double endAngle_;
    /// <summary>
    /// Bearing of last point, in radians
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double EndAngle {
      get { return endAngle_; }
      set {
        endAngle_ = value;
      }
    }

    /// <summary>Field number for the "ranges" field.</summary>
    public const int RangesFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_ranges_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> ranges_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Distance of detections from origin; assumed to be at equally-spaced angles between `start_angle` and `end_angle`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Ranges {
      get { return ranges_; }
    }

    /// <summary>Field number for the "intensities" field.</summary>
    public const int IntensitiesFieldNumber = 7;
    private static readonly pb::FieldCodec<double> _repeated_intensities_codec
        = pb::FieldCodec.ForDouble(58);
    private readonly pbc::RepeatedField<double> intensities_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Intensity of detections
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> Intensities {
      get { return intensities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LaserScan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LaserScan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (FrameId != other.FrameId) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StartAngle, other.StartAngle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(EndAngle, other.EndAngle)) return false;
      if(!ranges_.Equals(other.ranges_)) return false;
      if(!intensities_.Equals(other.intensities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (FrameId.Length != 0) hash ^= FrameId.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (StartAngle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StartAngle);
      if (EndAngle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(EndAngle);
      hash ^= ranges_.GetHashCode();
      hash ^= intensities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (FrameId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (pose_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pose);
      }
      if (StartAngle != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(StartAngle);
      }
      if (EndAngle != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(EndAngle);
      }
      ranges_.WriteTo(output, _repeated_ranges_codec);
      intensities_.WriteTo(output, _repeated_intensities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (FrameId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FrameId);
      }
      if (pose_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pose);
      }
      if (StartAngle != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(StartAngle);
      }
      if (EndAngle != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(EndAngle);
      }
      ranges_.WriteTo(ref output, _repeated_ranges_codec);
      intensities_.WriteTo(ref output, _repeated_intensities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (FrameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (StartAngle != 0D) {
        size += 1 + 8;
      }
      if (EndAngle != 0D) {
        size += 1 + 8;
      }
      size += ranges_.CalculateSize(_repeated_ranges_codec);
      size += intensities_.CalculateSize(_repeated_intensities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LaserScan other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.FrameId.Length != 0) {
        FrameId = other.FrameId;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Foxglove.Pose();
        }
        Pose.MergeFrom(other.Pose);
      }
      if (other.StartAngle != 0D) {
        StartAngle = other.StartAngle;
      }
      if (other.EndAngle != 0D) {
        EndAngle = other.EndAngle;
      }
      ranges_.Add(other.ranges_);
      intensities_.Add(other.intensities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
          case 26: {
            if (pose_ == null) {
              Pose = new global::Foxglove.Pose();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 33: {
            StartAngle = input.ReadDouble();
            break;
          }
          case 41: {
            EndAngle = input.ReadDouble();
            break;
          }
          case 50:
          case 49: {
            ranges_.AddEntriesFrom(input, _repeated_ranges_codec);
            break;
          }
          case 58:
          case 57: {
            intensities_.AddEntriesFrom(input, _repeated_intensities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            FrameId = input.ReadString();
            break;
          }
          case 26: {
            if (pose_ == null) {
              Pose = new global::Foxglove.Pose();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 33: {
            StartAngle = input.ReadDouble();
            break;
          }
          case 41: {
            EndAngle = input.ReadDouble();
            break;
          }
          case 50:
          case 49: {
            ranges_.AddEntriesFrom(ref input, _repeated_ranges_codec);
            break;
          }
          case 58:
          case 57: {
            intensities_.AddEntriesFrom(ref input, _repeated_intensities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
