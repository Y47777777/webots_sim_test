// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Imu.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foxglove {

  /// <summary>Holder for reflection information generated from Imu.proto</summary>
  public static partial class ImuReflection {

    #region Descriptor
    /// <summary>File descriptor for Imu.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ImuReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglJbXUucHJvdG8SCGZveGdsb3ZlGhBRdWF0ZXJuaW9uLnByb3RvGg1WZWN0",
            "b3IzLnByb3RvIvoBCgNJbXUSKQoLb3JpZW50YXRpb24YASABKAsyFC5mb3hn",
            "bG92ZS5RdWF0ZXJuaW9uEh4KFm9yaWVudGF0aW9uX2NvdmFyaWFuY2UYAiAD",
            "KAESKwoQYW5ndWxhcl92ZWxvY2l0eRgDIAEoCzIRLmZveGdsb3ZlLlZlY3Rv",
            "cjMSIwobYW5ndWxhcl92ZWxvY2l0eV9jb3ZhcmlhbmNlGAQgAygBEi4KE2xp",
            "bmVhcl9hY2NlbGVyYXRpb24YBSABKAsyES5mb3hnbG92ZS5WZWN0b3IzEiYK",
            "HmxpbmVhcl9hY2NlbGVyYXRpb25fY292YXJpYW5jZRgGIAMoAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Foxglove.QuaternionReflection.Descriptor, global::Foxglove.Vector3Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foxglove.Imu), global::Foxglove.Imu.Parser, new[]{ "Orientation", "OrientationCovariance", "AngularVelocity", "AngularVelocityCovariance", "LinearAcceleration", "LinearAccelerationCovariance" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// An Imu data
  /// </summary>
  public sealed partial class Imu : pb::IMessage<Imu>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Imu> _parser = new pb::MessageParser<Imu>(() => new Imu());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Imu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foxglove.ImuReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Imu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Imu(Imu other) : this() {
      orientation_ = other.orientation_ != null ? other.orientation_.Clone() : null;
      orientationCovariance_ = other.orientationCovariance_.Clone();
      angularVelocity_ = other.angularVelocity_ != null ? other.angularVelocity_.Clone() : null;
      angularVelocityCovariance_ = other.angularVelocityCovariance_.Clone();
      linearAcceleration_ = other.linearAcceleration_ != null ? other.linearAcceleration_.Clone() : null;
      linearAccelerationCovariance_ = other.linearAccelerationCovariance_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Imu Clone() {
      return new Imu(this);
    }

    /// <summary>Field number for the "orientation" field.</summary>
    public const int OrientationFieldNumber = 1;
    private global::Foxglove.Quaternion orientation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Quaternion Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "orientation_covariance" field.</summary>
    public const int OrientationCovarianceFieldNumber = 2;
    private static readonly pb::FieldCodec<double> _repeated_orientationCovariance_codec
        = pb::FieldCodec.ForDouble(18);
    private readonly pbc::RepeatedField<double> orientationCovariance_ = new pbc::RepeatedField<double>();
    /// <summary>
    ///length=9
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> OrientationCovariance {
      get { return orientationCovariance_; }
    }

    /// <summary>Field number for the "angular_velocity" field.</summary>
    public const int AngularVelocityFieldNumber = 3;
    private global::Foxglove.Vector3 angularVelocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Vector3 AngularVelocity {
      get { return angularVelocity_; }
      set {
        angularVelocity_ = value;
      }
    }

    /// <summary>Field number for the "angular_velocity_covariance" field.</summary>
    public const int AngularVelocityCovarianceFieldNumber = 4;
    private static readonly pb::FieldCodec<double> _repeated_angularVelocityCovariance_codec
        = pb::FieldCodec.ForDouble(34);
    private readonly pbc::RepeatedField<double> angularVelocityCovariance_ = new pbc::RepeatedField<double>();
    /// <summary>
    ///length=9
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> AngularVelocityCovariance {
      get { return angularVelocityCovariance_; }
    }

    /// <summary>Field number for the "linear_acceleration" field.</summary>
    public const int LinearAccelerationFieldNumber = 5;
    private global::Foxglove.Vector3 linearAcceleration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Vector3 LinearAcceleration {
      get { return linearAcceleration_; }
      set {
        linearAcceleration_ = value;
      }
    }

    /// <summary>Field number for the "linear_acceleration_covariance" field.</summary>
    public const int LinearAccelerationCovarianceFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_linearAccelerationCovariance_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> linearAccelerationCovariance_ = new pbc::RepeatedField<double>();
    /// <summary>
    ///length=9
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> LinearAccelerationCovariance {
      get { return linearAccelerationCovariance_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Imu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Imu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Orientation, other.Orientation)) return false;
      if(!orientationCovariance_.Equals(other.orientationCovariance_)) return false;
      if (!object.Equals(AngularVelocity, other.AngularVelocity)) return false;
      if(!angularVelocityCovariance_.Equals(other.angularVelocityCovariance_)) return false;
      if (!object.Equals(LinearAcceleration, other.LinearAcceleration)) return false;
      if(!linearAccelerationCovariance_.Equals(other.linearAccelerationCovariance_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (orientation_ != null) hash ^= Orientation.GetHashCode();
      hash ^= orientationCovariance_.GetHashCode();
      if (angularVelocity_ != null) hash ^= AngularVelocity.GetHashCode();
      hash ^= angularVelocityCovariance_.GetHashCode();
      if (linearAcceleration_ != null) hash ^= LinearAcceleration.GetHashCode();
      hash ^= linearAccelerationCovariance_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (orientation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Orientation);
      }
      orientationCovariance_.WriteTo(output, _repeated_orientationCovariance_codec);
      if (angularVelocity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AngularVelocity);
      }
      angularVelocityCovariance_.WriteTo(output, _repeated_angularVelocityCovariance_codec);
      if (linearAcceleration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LinearAcceleration);
      }
      linearAccelerationCovariance_.WriteTo(output, _repeated_linearAccelerationCovariance_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (orientation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Orientation);
      }
      orientationCovariance_.WriteTo(ref output, _repeated_orientationCovariance_codec);
      if (angularVelocity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AngularVelocity);
      }
      angularVelocityCovariance_.WriteTo(ref output, _repeated_angularVelocityCovariance_codec);
      if (linearAcceleration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LinearAcceleration);
      }
      linearAccelerationCovariance_.WriteTo(ref output, _repeated_linearAccelerationCovariance_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (orientation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
      }
      size += orientationCovariance_.CalculateSize(_repeated_orientationCovariance_codec);
      if (angularVelocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AngularVelocity);
      }
      size += angularVelocityCovariance_.CalculateSize(_repeated_angularVelocityCovariance_codec);
      if (linearAcceleration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinearAcceleration);
      }
      size += linearAccelerationCovariance_.CalculateSize(_repeated_linearAccelerationCovariance_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Imu other) {
      if (other == null) {
        return;
      }
      if (other.orientation_ != null) {
        if (orientation_ == null) {
          Orientation = new global::Foxglove.Quaternion();
        }
        Orientation.MergeFrom(other.Orientation);
      }
      orientationCovariance_.Add(other.orientationCovariance_);
      if (other.angularVelocity_ != null) {
        if (angularVelocity_ == null) {
          AngularVelocity = new global::Foxglove.Vector3();
        }
        AngularVelocity.MergeFrom(other.AngularVelocity);
      }
      angularVelocityCovariance_.Add(other.angularVelocityCovariance_);
      if (other.linearAcceleration_ != null) {
        if (linearAcceleration_ == null) {
          LinearAcceleration = new global::Foxglove.Vector3();
        }
        LinearAcceleration.MergeFrom(other.LinearAcceleration);
      }
      linearAccelerationCovariance_.Add(other.linearAccelerationCovariance_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (orientation_ == null) {
              Orientation = new global::Foxglove.Quaternion();
            }
            input.ReadMessage(Orientation);
            break;
          }
          case 18:
          case 17: {
            orientationCovariance_.AddEntriesFrom(input, _repeated_orientationCovariance_codec);
            break;
          }
          case 26: {
            if (angularVelocity_ == null) {
              AngularVelocity = new global::Foxglove.Vector3();
            }
            input.ReadMessage(AngularVelocity);
            break;
          }
          case 34:
          case 33: {
            angularVelocityCovariance_.AddEntriesFrom(input, _repeated_angularVelocityCovariance_codec);
            break;
          }
          case 42: {
            if (linearAcceleration_ == null) {
              LinearAcceleration = new global::Foxglove.Vector3();
            }
            input.ReadMessage(LinearAcceleration);
            break;
          }
          case 50:
          case 49: {
            linearAccelerationCovariance_.AddEntriesFrom(input, _repeated_linearAccelerationCovariance_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (orientation_ == null) {
              Orientation = new global::Foxglove.Quaternion();
            }
            input.ReadMessage(Orientation);
            break;
          }
          case 18:
          case 17: {
            orientationCovariance_.AddEntriesFrom(ref input, _repeated_orientationCovariance_codec);
            break;
          }
          case 26: {
            if (angularVelocity_ == null) {
              AngularVelocity = new global::Foxglove.Vector3();
            }
            input.ReadMessage(AngularVelocity);
            break;
          }
          case 34:
          case 33: {
            angularVelocityCovariance_.AddEntriesFrom(ref input, _repeated_angularVelocityCovariance_codec);
            break;
          }
          case 42: {
            if (linearAcceleration_ == null) {
              LinearAcceleration = new global::Foxglove.Vector3();
            }
            input.ReadMessage(LinearAcceleration);
            break;
          }
          case 50:
          case 49: {
            linearAccelerationCovariance_.AddEntriesFrom(ref input, _repeated_linearAccelerationCovariance_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
