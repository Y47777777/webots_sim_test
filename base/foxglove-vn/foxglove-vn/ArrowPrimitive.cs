// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ArrowPrimitive.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foxglove {

  /// <summary>Holder for reflection information generated from ArrowPrimitive.proto</summary>
  public static partial class ArrowPrimitiveReflection {

    #region Descriptor
    /// <summary>File descriptor for ArrowPrimitive.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArrowPrimitiveReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRBcnJvd1ByaW1pdGl2ZS5wcm90bxIIZm94Z2xvdmUaC0NvbG9yLnByb3Rv",
            "GgpQb3NlLnByb3RvIqgBCg5BcnJvd1ByaW1pdGl2ZRIcCgRwb3NlGAEgASgL",
            "Mg4uZm94Z2xvdmUuUG9zZRIUCgxzaGFmdF9sZW5ndGgYAiABKAESFgoOc2hh",
            "ZnRfZGlhbWV0ZXIYAyABKAESEwoLaGVhZF9sZW5ndGgYBCABKAESFQoNaGVh",
            "ZF9kaWFtZXRlchgFIAEoARIeCgVjb2xvchgGIAEoCzIPLmZveGdsb3ZlLkNv",
            "bG9yYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Foxglove.ColorReflection.Descriptor, global::Foxglove.PoseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foxglove.ArrowPrimitive), global::Foxglove.ArrowPrimitive.Parser, new[]{ "Pose", "ShaftLength", "ShaftDiameter", "HeadLength", "HeadDiameter", "Color" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A primitive representing an arrow
  /// </summary>
  public sealed partial class ArrowPrimitive : pb::IMessage<ArrowPrimitive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArrowPrimitive> _parser = new pb::MessageParser<ArrowPrimitive>(() => new ArrowPrimitive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ArrowPrimitive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foxglove.ArrowPrimitiveReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArrowPrimitive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArrowPrimitive(ArrowPrimitive other) : this() {
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      shaftLength_ = other.shaftLength_;
      shaftDiameter_ = other.shaftDiameter_;
      headLength_ = other.headLength_;
      headDiameter_ = other.headDiameter_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArrowPrimitive Clone() {
      return new ArrowPrimitive(this);
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 1;
    private global::Foxglove.Pose pose_;
    /// <summary>
    /// Position of the arrow's tail and orientation of the arrow. Identity orientation means the arrow points in the +x direction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Pose Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    /// <summary>Field number for the "shaft_length" field.</summary>
    public const int ShaftLengthFieldNumber = 2;
    private double shaftLength_;
    /// <summary>
    /// Length of the arrow shaft
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ShaftLength {
      get { return shaftLength_; }
      set {
        shaftLength_ = value;
      }
    }

    /// <summary>Field number for the "shaft_diameter" field.</summary>
    public const int ShaftDiameterFieldNumber = 3;
    private double shaftDiameter_;
    /// <summary>
    /// Diameter of the arrow shaft
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double ShaftDiameter {
      get { return shaftDiameter_; }
      set {
        shaftDiameter_ = value;
      }
    }

    /// <summary>Field number for the "head_length" field.</summary>
    public const int HeadLengthFieldNumber = 4;
    private double headLength_;
    /// <summary>
    /// Length of the arrow head
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HeadLength {
      get { return headLength_; }
      set {
        headLength_ = value;
      }
    }

    /// <summary>Field number for the "head_diameter" field.</summary>
    public const int HeadDiameterFieldNumber = 5;
    private double headDiameter_;
    /// <summary>
    /// Diameter of the arrow head
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double HeadDiameter {
      get { return headDiameter_; }
      set {
        headDiameter_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 6;
    private global::Foxglove.Color color_;
    /// <summary>
    /// Color of the arrow
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Foxglove.Color Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ArrowPrimitive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ArrowPrimitive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pose, other.Pose)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShaftLength, other.ShaftLength)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ShaftDiameter, other.ShaftDiameter)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HeadLength, other.HeadLength)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(HeadDiameter, other.HeadDiameter)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (ShaftLength != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShaftLength);
      if (ShaftDiameter != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ShaftDiameter);
      if (HeadLength != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HeadLength);
      if (HeadDiameter != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(HeadDiameter);
      if (color_ != null) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (pose_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pose);
      }
      if (ShaftLength != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ShaftLength);
      }
      if (ShaftDiameter != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ShaftDiameter);
      }
      if (HeadLength != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HeadLength);
      }
      if (HeadDiameter != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(HeadDiameter);
      }
      if (color_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (pose_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pose);
      }
      if (ShaftLength != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(ShaftLength);
      }
      if (ShaftDiameter != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(ShaftDiameter);
      }
      if (HeadLength != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(HeadLength);
      }
      if (HeadDiameter != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(HeadDiameter);
      }
      if (color_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (ShaftLength != 0D) {
        size += 1 + 8;
      }
      if (ShaftDiameter != 0D) {
        size += 1 + 8;
      }
      if (HeadLength != 0D) {
        size += 1 + 8;
      }
      if (HeadDiameter != 0D) {
        size += 1 + 8;
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ArrowPrimitive other) {
      if (other == null) {
        return;
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::Foxglove.Pose();
        }
        Pose.MergeFrom(other.Pose);
      }
      if (other.ShaftLength != 0D) {
        ShaftLength = other.ShaftLength;
      }
      if (other.ShaftDiameter != 0D) {
        ShaftDiameter = other.ShaftDiameter;
      }
      if (other.HeadLength != 0D) {
        HeadLength = other.HeadLength;
      }
      if (other.HeadDiameter != 0D) {
        HeadDiameter = other.HeadDiameter;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::Foxglove.Color();
        }
        Color.MergeFrom(other.Color);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pose_ == null) {
              Pose = new global::Foxglove.Pose();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 17: {
            ShaftLength = input.ReadDouble();
            break;
          }
          case 25: {
            ShaftDiameter = input.ReadDouble();
            break;
          }
          case 33: {
            HeadLength = input.ReadDouble();
            break;
          }
          case 41: {
            HeadDiameter = input.ReadDouble();
            break;
          }
          case 50: {
            if (color_ == null) {
              Color = new global::Foxglove.Color();
            }
            input.ReadMessage(Color);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (pose_ == null) {
              Pose = new global::Foxglove.Pose();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 17: {
            ShaftLength = input.ReadDouble();
            break;
          }
          case 25: {
            ShaftDiameter = input.ReadDouble();
            break;
          }
          case 33: {
            HeadLength = input.ReadDouble();
            break;
          }
          case 41: {
            HeadDiameter = input.ReadDouble();
            break;
          }
          case 50: {
            if (color_ == null) {
              Color = new global::Foxglove.Color();
            }
            input.ReadMessage(Color);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
