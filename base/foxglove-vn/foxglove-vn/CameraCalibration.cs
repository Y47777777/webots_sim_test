// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CameraCalibration.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Foxglove {

  /// <summary>Holder for reflection information generated from CameraCalibration.proto</summary>
  public static partial class CameraCalibrationReflection {

    #region Descriptor
    /// <summary>File descriptor for CameraCalibration.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CameraCalibrationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdDYW1lcmFDYWxpYnJhdGlvbi5wcm90bxIIZm94Z2xvdmUaH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8iuQEKEUNhbWVyYUNhbGlicmF0aW9u",
            "Ei0KCXRpbWVzdGFtcBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXASEAoIZnJhbWVfaWQYCSABKAkSDQoFd2lkdGgYAiABKAcSDgoGaGVpZ2h0",
            "GAMgASgHEhgKEGRpc3RvcnRpb25fbW9kZWwYBCABKAkSCQoBRBgFIAMoARIJ",
            "CgFLGAYgAygBEgkKAVIYByADKAESCQoBUBgIIAMoAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Foxglove.CameraCalibration), global::Foxglove.CameraCalibration.Parser, new[]{ "Timestamp", "FrameId", "Width", "Height", "DistortionModel", "D", "K", "R", "P" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Camera calibration parameters
  /// </summary>
  public sealed partial class CameraCalibration : pb::IMessage<CameraCalibration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CameraCalibration> _parser = new pb::MessageParser<CameraCalibration>(() => new CameraCalibration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CameraCalibration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Foxglove.CameraCalibrationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraCalibration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraCalibration(CameraCalibration other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      frameId_ = other.frameId_;
      width_ = other.width_;
      height_ = other.height_;
      distortionModel_ = other.distortionModel_;
      d_ = other.d_.Clone();
      k_ = other.k_.Clone();
      r_ = other.r_.Clone();
      p_ = other.p_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CameraCalibration Clone() {
      return new CameraCalibration(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Timestamp of calibration data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "frame_id" field.</summary>
    public const int FrameIdFieldNumber = 9;
    private string frameId_ = "";
    /// <summary>
    /// Frame of reference for the camera. The origin of the frame is the optical center of the camera. +x points to the right in the image, +y points down, and +z points into the plane of the image.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FrameId {
      get { return frameId_; }
      set {
        frameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private uint width_;
    /// <summary>
    /// Image width
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private uint height_;
    /// <summary>
    /// Image height
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "distortion_model" field.</summary>
    public const int DistortionModelFieldNumber = 4;
    private string distortionModel_ = "";
    /// <summary>
    /// Name of distortion model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DistortionModel {
      get { return distortionModel_; }
      set {
        distortionModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "D" field.</summary>
    public const int DFieldNumber = 5;
    private static readonly pb::FieldCodec<double> _repeated_d_codec
        = pb::FieldCodec.ForDouble(42);
    private readonly pbc::RepeatedField<double> d_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Distortion parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> D {
      get { return d_; }
    }

    /// <summary>Field number for the "K" field.</summary>
    public const int KFieldNumber = 6;
    private static readonly pb::FieldCodec<double> _repeated_k_codec
        = pb::FieldCodec.ForDouble(50);
    private readonly pbc::RepeatedField<double> k_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Intrinsic camera matrix (3x3 row-major matrix)
    /// 
    /// A 3x3 row-major matrix for the raw (distorted) image.
    /// 
    /// Projects 3D points in the camera coordinate frame to 2D pixel coordinates using the focal lengths (fx, fy) and principal point (cx, cy).
    /// 
    /// ```
    ///     [fx  0 cx]
    /// K = [ 0 fy cy]
    ///     [ 0  0  1]
    /// ```
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> K {
      get { return k_; }
    }

    /// <summary>Field number for the "R" field.</summary>
    public const int RFieldNumber = 7;
    private static readonly pb::FieldCodec<double> _repeated_r_codec
        = pb::FieldCodec.ForDouble(58);
    private readonly pbc::RepeatedField<double> r_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Rectification matrix (3x3 row-major matrix)
    /// 
    /// A rotation matrix aligning the camera coordinate system to the ideal stereo image plane so that epipolar lines in both stereo images are parallel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> R {
      get { return r_; }
    }

    /// <summary>Field number for the "P" field.</summary>
    public const int PFieldNumber = 8;
    private static readonly pb::FieldCodec<double> _repeated_p_codec
        = pb::FieldCodec.ForDouble(66);
    private readonly pbc::RepeatedField<double> p_ = new pbc::RepeatedField<double>();
    /// <summary>
    /// Projection/camera matrix (3x4 row-major matrix)
    /// 
    /// ```
    ///     [fx'  0  cx' Tx]
    /// P = [ 0  fy' cy' Ty]
    ///     [ 0   0   1   0]
    /// ```
    /// 
    /// By convention, this matrix specifies the intrinsic (camera) matrix of the processed (rectified) image. That is, the left 3x3 portion is the normal camera intrinsic matrix for the rectified image.
    /// 
    /// It projects 3D points in the camera coordinate frame to 2D pixel coordinates using the focal lengths (fx', fy') and principal point (cx', cy') - these may differ from the values in K.
    /// 
    /// For monocular cameras, Tx = Ty = 0. Normally, monocular cameras will also have R = the identity and P[1:3,1:3] = K.
    /// 
    /// For a stereo pair, the fourth column [Tx Ty 0]' is related to the position of the optical center of the second camera in the first camera's frame. We assume Tz = 0 so both cameras are in the same stereo image plane. The first camera always has Tx = Ty = 0. For the right (second) camera of a horizontal stereo pair, Ty = 0 and Tx = -fx' * B, where B is the baseline between the cameras.
    /// 
    /// Given a 3D point [X Y Z]', the projection (x, y) of the point onto the rectified image is given by:
    /// 
    /// ```
    /// [u v w]' = P * [X Y Z 1]'
    ///        x = u / w
    ///        y = v / w
    /// ```
    /// 
    /// This holds for both images of a stereo pair.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<double> P {
      get { return p_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CameraCalibration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CameraCalibration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (FrameId != other.FrameId) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (DistortionModel != other.DistortionModel) return false;
      if(!d_.Equals(other.d_)) return false;
      if(!k_.Equals(other.k_)) return false;
      if(!r_.Equals(other.r_)) return false;
      if(!p_.Equals(other.p_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (FrameId.Length != 0) hash ^= FrameId.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (DistortionModel.Length != 0) hash ^= DistortionModel.GetHashCode();
      hash ^= d_.GetHashCode();
      hash ^= k_.GetHashCode();
      hash ^= r_.GetHashCode();
      hash ^= p_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (Width != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Height);
      }
      if (DistortionModel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DistortionModel);
      }
      d_.WriteTo(output, _repeated_d_codec);
      k_.WriteTo(output, _repeated_k_codec);
      r_.WriteTo(output, _repeated_r_codec);
      p_.WriteTo(output, _repeated_p_codec);
      if (FrameId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      if (Width != 0) {
        output.WriteRawTag(21);
        output.WriteFixed32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(Height);
      }
      if (DistortionModel.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DistortionModel);
      }
      d_.WriteTo(ref output, _repeated_d_codec);
      k_.WriteTo(ref output, _repeated_k_codec);
      r_.WriteTo(ref output, _repeated_r_codec);
      p_.WriteTo(ref output, _repeated_p_codec);
      if (FrameId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FrameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (FrameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FrameId);
      }
      if (Width != 0) {
        size += 1 + 4;
      }
      if (Height != 0) {
        size += 1 + 4;
      }
      if (DistortionModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DistortionModel);
      }
      size += d_.CalculateSize(_repeated_d_codec);
      size += k_.CalculateSize(_repeated_k_codec);
      size += r_.CalculateSize(_repeated_r_codec);
      size += p_.CalculateSize(_repeated_p_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CameraCalibration other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.FrameId.Length != 0) {
        FrameId = other.FrameId;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.DistortionModel.Length != 0) {
        DistortionModel = other.DistortionModel;
      }
      d_.Add(other.d_);
      k_.Add(other.k_);
      r_.Add(other.r_);
      p_.Add(other.p_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 21: {
            Width = input.ReadFixed32();
            break;
          }
          case 29: {
            Height = input.ReadFixed32();
            break;
          }
          case 34: {
            DistortionModel = input.ReadString();
            break;
          }
          case 42:
          case 41: {
            d_.AddEntriesFrom(input, _repeated_d_codec);
            break;
          }
          case 50:
          case 49: {
            k_.AddEntriesFrom(input, _repeated_k_codec);
            break;
          }
          case 58:
          case 57: {
            r_.AddEntriesFrom(input, _repeated_r_codec);
            break;
          }
          case 66:
          case 65: {
            p_.AddEntriesFrom(input, _repeated_p_codec);
            break;
          }
          case 74: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 21: {
            Width = input.ReadFixed32();
            break;
          }
          case 29: {
            Height = input.ReadFixed32();
            break;
          }
          case 34: {
            DistortionModel = input.ReadString();
            break;
          }
          case 42:
          case 41: {
            d_.AddEntriesFrom(ref input, _repeated_d_codec);
            break;
          }
          case 50:
          case 49: {
            k_.AddEntriesFrom(ref input, _repeated_k_codec);
            break;
          }
          case 58:
          case 57: {
            r_.AddEntriesFrom(ref input, _repeated_r_codec);
            break;
          }
          case 66:
          case 65: {
            p_.AddEntriesFrom(ref input, _repeated_p_codec);
            break;
          }
          case 74: {
            FrameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
